<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- 扫描注解 -->
	<context:component-scan base-package="com.qjz.declarePlatform">
		<!-- 
			注意：Spring容器优先加载由ServletContextListener（对应applicationContext.xml）产生的父容器，
				而SpringMVC（对应springmvc.xml）产生的是子容器。 子容器Controller进行扫描装配时装配的@Service注解的实例是没有经过事务加强处理，
				即没有事务处理能力的Service，而父容器进行初始化的Service是保证事务的增强处理能力的。如果不在子容器中将Service exclude掉，
				此时得到的将是原样的无事务处理能力的Service。 所以我们要在扫描的时候在子容器中将Service exclude掉，这样才能进行事务管理
		 -->
		<!--下面这个是防止事务没起作用，applicationContext.xml的父容器先于Servlet的子容器生效，将Service提前加载了。这里不用再进行加载装配-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<!-- 使用 mvc:annotation-driven代替注解映射器和注解适配器配置
   		  mvc:annotation-driven默认加载很多的参数绑定方法，比如json转换解析器就默认加载了
   		    如果使用mvc:annotation-driven不用配置RequestMappingHandlerMapping和RequestMappingHandlerAdapter
		    实际开发时使用mvc:annotation-driven
     -->
     <mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 配置视图解析器 ：解析出真正的物理视图
		后台返回逻辑视图: index
		解析出真正的物理视图： 前缀+逻辑视图+后缀 == = /WEB-INF/jsps/index.jsp
	 -->	
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	 	<property name="prefix" value="/WEB-INF/view/"></property>
	 	<property name="suffix" value=".jsp"></property>
	 </bean>
	 
	 <!-- 文件上传需要配置此解析器,开启SpringMVC支持文件上传
       找类的快捷键为:ctrl+shift+t
       查看本类方法：ctrl+o,假如想继续看父类方法继续ctrl+o
    -->
    <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		 <!-- 指定所上传文件的总大小不能超过10485760KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
   </bean>
	 
</beans>